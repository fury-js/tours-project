/* eslint-disable prettier/prettier */
    // const tours = await Tour.find().where('duration').equals(5).where('difficulty').equals('easy')

    // BUILD QUERY
    // const queryObj = { ...req.query }
    // console.log(req.query, queryObj)

    // // 1A. FILTERING
    // const excludedFields = ['page', 'fields', 'sort', 'limit'];
    // excludedFields.forEach((el) => {
    //   delete queryObj[el];
    // });

    // // 1A. Advanced filtering
    // let queryStr = JSON.stringify(queryObj)
    // queryStr = queryStr.replace(/\b(gte|gt|lte|lt)\b/g, (match) => `$${match}`);

    // let query = Tour.find(JSON.parse(queryStr));

    // SORTING
    // Sort by user requested sort parameters in sort
    // if (req.query.sort) {
    //   const sortBy = req.query.sort.split(',').join(' ');
    //   query = query.sort(sortBy);
    // } else {
    //   query = query.sort('createdAt');
    // }

    // Sort by specific field name
    // limiting
    // if (req.query.fields) {
    //   const fields = req.query.fields.split(',').join(' ');
    //   query = query.select(fields);
    // } else {
    //   query = query.select('-__v');
    // }

    // PAGINATION
    // respond with user requested page
    // if (req.query.page) {
    //   const numOfTours = await Tour.countDocuments();
    //   const page = parseInt(req.query.page) || 1;
    //   const limit = parseInt(req.query.limit) || 100;
    //   const skipValue = (page - 1) * limit;

    //   if (skipValue >= numOfTours) throw new Error('this page does not exist');

    //   query = query.skip(skipValue).limit(limit);
    // }